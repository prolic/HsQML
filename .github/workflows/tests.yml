name: Tests

# Trigger the workflow on push or pull request, but only for the main branch
on:
  pull_request:
  push:
    branches: ["master"]

jobs:
  generate-matrix:
    name: "Generate matrix from cabal"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: Extract the tested GHC versions
        id: set-matrix
        uses: kleidukos/get-tested@v0.1.7.1
        with:
          cabal-file: hsqml.cabal
          ubuntu-version: latest
          windows-version: latest
          version: 0.1.7.1

  tests:
    name: ${{ matrix.ghc }} on ${{ matrix.os }}
    needs: generate-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v4

      - name: Set up Haskell
        id: setup-haskell
        uses: haskell-actions/setup@v2.8
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: 'latest'

      - name: Configure
        run: cabal configure --enable-tests

      - name: Cache Cabal packages
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-ghc-${{ matrix.ghc }}-cabal-${{ hashFiles('**/*.cabal', '**/cabal.project', '**/cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-ghc-${{ matrix.ghc }}-cabal-

      - name: Setup MSYS2 (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            base
            mingw-w64-x86_64-toolchain
            git

      - name: Install Build Tools (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          pacman -Syu
          pacman -S --noconfirm autoconf autogen automake libtool gcc git mingw-w64-x86_64-libunwind mingw-w64-x86_64-toolchain mingw-w64-x86_64-make mingw-w64-x86_64-cmake mingw-w64-x86_64-autotools mingw-w64-x86_64-pkg-config

      - name: Install Qt5 Dependencies (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm mingw-w64-x86_64-qt5-base mingw-w64-x86_64-qt5-declarative mingw-w64-x86_64-qt5-graphicaleffects mingw-w64-x86_64-qt5-imageformats mingw-w64-x86_64-qt5-multimedia mingw-w64-x86_64-qt5-quickcontrols2 mingw-w64-x86_64-qt5-svg mingw-w64-x86_64-qt5-tools mingw-w64-x86_64-qt5-translations mingw-w64-x86_64-qt5-winextras mingw-w64-x86_64-angleproject

      - name: Install Qt5 Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            qtdeclarative5-dev \
            qml-module-qtquick-controls2 \
            qml-module-qtquick-window2 \
            qml-module-qtquick2 \
            libqt5quick5 \
            qt5-image-formats-plugins \
            qtmultimedia5-dev \
            qml-module-qtmultimedia \
            qttools5-dev-tools \
            qtbase5-dev \
            xvfb

      - name: Start Xvfb (Linux)
        if: runner.os == 'Linux'
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Debug Windows Paths (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          export PATH="/c/ghcup/bin:/mingw64/bin:$PATH"
          export PKG_CONFIG_PATH=/mingw64/lib/pkgconfig
          echo "Listing /c/ghcup directory:"
          ls -la /c/ghcup || echo "Directory not found"
          echo "Listing /c/ghcup/bin directory:"
          ls -la /c/ghcup/bin || echo "Directory not found"
          echo "Checking setup output paths:"
          echo "GHC path: ${{ steps.setup-haskell.outputs.ghc-path }}"
          echo "Cabal path: ${{ steps.setup-haskell.outputs.cabal-path }}"
          echo "Cabal exe: ${{ steps.setup-haskell.outputs.cabal-exe }}"
          which cabal || echo "Cabal not in PATH"

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          export PATH="/c/ghcup/bin:/mingw64/bin:$PATH"
          export PKG_CONFIG_PATH=/mingw64/lib/pkgconfig
          cabal build --enable-tests

      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: cabal build --enable-tests

      - name: Test (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          export PATH="/c/ghcup/bin:/mingw64/bin:$PATH"
          export PKG_CONFIG_PATH=/mingw64/lib/pkgconfig
          cabal run hsqml-test1 --enable-tests

      - name: Test (Linux)
        if: runner.os == 'Linux'
        run: cabal run hsqml-test1 --enable-tests
