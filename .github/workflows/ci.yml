name: CI

on:
  push:
    branches: [ ci ]
  pull_request:
    branches: [ ci ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: '9.6.7'
        cabal-version: '3.10.3.0'

    - name: Cache Cabal packages
      uses: actions/cache@v4.2.3
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: ${{ runner.os }}-ghc-9.6.7-cabal-${{ hashFiles('**/*.cabal', '**/cabal.project', '**/cabal.project.freeze') }}
        restore-keys: |
          ${{ runner.os }}-ghc-9.6.7-cabal-

    - name: Update Cabal package list
      run: cabal update

    - name: Install Qt dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y qt5-default qtdeclarative5-dev qtdeclarative5-qtquick2-plugin qtdeclarative5-window-plugin

    - name: Install Qt dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install qt@5

    - name: Install Qt dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        pacman -S --noconfirm mingw-w64-x86_64-qt5 mingw-w64-x86_64-qt5-declarative mingw-w64-x86_64-qt5-quickcontrols2

    - name: Setup Xvfb (Linux only)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -y xvfb
        echo "export DISPLAY=:99.0" >> $GITHUB_ENV
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

    - name: Configure
      run: cabal configure --enable-tests --enable-benchmarks -v2

    - name: Build
      run: cabal build

    - name: Test
      run: cabal test

    - name: Check
      run: cabal check

    - name: Create source distribution
      run: cabal sdist

    - name: Verify source distribution
      run: |
        SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz
        cd dist
        cabal install --force-reinstalls "$SRC_TGZ"

    - name: Test GHCi
      run: echo 'do {Graphics.QML.Debug.setDebugLogLevel 0; putStrLn "OK"}' | ghci | grep OK
